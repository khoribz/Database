CREATE SCHEMA Hospital;
CREATE TABLE Hospital.Procedure (
    procedure_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    proc_name VARCHAR(200) NOT NULL,
    duration TIME
);
CREATE TABLE Hospital.Medicine (
    medicine_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    drug_name VARCHAR(200) NOT NULL,
    validity DATE
);
CREATE TABLE Hospital.Diagnosis (
    diagnosis_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    diag_name VARCHAR(200) NOT NULL,
    degree VARCHAR(100),
    medicine_id INTEGER REFERENCES Hospital.Medicine,
    procedure_id INTEGER REFERENCES Hospital.Procedure
);
CREATE TABLE Hospital.Blood (
    blood_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    group_num INTEGER,
    rh_factor CHAR
);
CREATE TABLE Hospital.Patient (
    patient_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    birth DATE,
    gender CHAR,
    blood_id INTEGER NOT NULL REFERENCES Hospital.Blood,
    diagnosis_id INTEGER NOT NULL REFERENCES Hospital.Diagnosis
);
CREATE TABLE Hospital.Specialization (
    specialization_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    spec_name VARCHAR(200),
    type VARCHAR(200)
);
CREATE TABLE Hospital.Doctor (
    doctor_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    specialization_id INTEGER NOT NULL REFERENCES Hospital.Specialization
);
CREATE TABLE Hospital.Visit (
    visit_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patient_id INTEGER NOT NULL REFERENCES Hospital.Patient,
    doctor_id INTEGER NOT NULL REFERENCES Hospital.Doctor,
    visit_date DATE NOT NULL,
    visit_time TIME NOT NULL
);
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
INSERT INTO Hospital.Specialization (specialization_id, type, spec_name) VALUES (1, 'Общая практика', 'Терапевт');
INSERT INTO Hospital.Specialization (specialization_id, type, spec_name) VALUES (2, 'Психиария', 'Психиатр');
INSERT INTO Hospital.Specialization (specialization_id, type, spec_name) VALUES (3, 'Наркология', 'Нарколог');
INSERT INTO Hospital.Specialization (specialization_id, type, spec_name) VALUES (4, 'Общая практика', 'Педиатр');
INSERT INTO Hospital.Specialization (specialization_id, type, spec_name) VALUES (5, 'Общая практика', 'Иммунолог');
INSERT INTO Hospital.Specialization (specialization_id, type, spec_name) VALUES (6, 'Дерматология', 'Дерматолог');
INSERT INTO Hospital.Specialization (specialization_id, type, spec_name) VALUES (7, 'Травматология', 'Остеопат');
INSERT INTO Hospital.Specialization (specialization_id, type, spec_name) VALUES (8, 'Травматология', 'Ортопед');
INSERT INTO Hospital.Specialization (specialization_id, type, spec_name) VALUES (9, 'Травматология', 'Травматолог');
INSERT INTO Hospital.Specialization (specialization_id, type, spec_name) VALUES (10, 'Общая практика', 'Физиотерапевт');
INSERT INTO Hospital.Specialization (specialization_id, type, spec_name) VALUES (11, 'Дерматология', 'Аллерголог');

INSERT INTO Hospital.Doctor (doctor_id, first_name, last_name, specialization_id) VALUES (1,'Дмитрий','Александров', 5);
INSERT INTO Hospital.Doctor (doctor_id, first_name, last_name, specialization_id) VALUES (2,'Татьяна','Алексеева', 2);
INSERT INTO Hospital.Doctor (doctor_id, first_name, last_name, specialization_id) VALUES (3,'Виктор','Андреев', 1);
INSERT INTO Hospital.Doctor (doctor_id, first_name, last_name, specialization_id) VALUES (4,'Павел','Антонов', 9);
INSERT INTO Hospital.Doctor (doctor_id, first_name, last_name, specialization_id) VALUES (5,'Даниил','Белов', 2);
INSERT INTO Hospital.Doctor (doctor_id, first_name, last_name, specialization_id) VALUES (6,'Сергей','Борисов', 3);
INSERT INTO Hospital.Doctor (doctor_id, first_name, last_name, specialization_id) VALUES (7,'Иван','Васильев', 7);
INSERT INTO Hospital.Doctor (doctor_id, first_name, last_name, specialization_id) VALUES (8,'Константин','Виноградов', 7);
INSERT INTO Hospital.Doctor (doctor_id, first_name, last_name, specialization_id) VALUES (9,'Валерия','Волкова', 6);
INSERT INTO Hospital.Doctor (doctor_id, first_name, last_name, specialization_id) VALUES (10,'Дарья','Воробьева', 10);
INSERT INTO Hospital.Doctor (doctor_id, first_name, last_name, specialization_id) VALUES (11,'Мария','Григорьева', 2);

INSERT INTO Hospital.Procedure (proc_name, duration) VALUES ('Измерение температуры', '00:00:05');
INSERT INTO Hospital.Procedure (proc_name, duration) VALUES ('Электромиография', '00:01:20');
INSERT INTO Hospital.Procedure (proc_name, duration) VALUES ('Эндоскопия', '00:00:35');
INSERT INTO Hospital.Procedure (proc_name, duration) VALUES ('Флюорография ', '00:00:10');
INSERT INTO Hospital.Procedure (proc_name, duration) VALUES ('Рентгенография', '00:00:15');
INSERT INTO Hospital.Procedure (proc_name, duration) VALUES ('Химиотерапия', '00:02:30');
INSERT INTO Hospital.Procedure (proc_name, duration) VALUES ('Физиотерапия', NULL);
INSERT INTO Hospital.Procedure (proc_name, duration) VALUES ('Гидротерапия', NULL);
INSERT INTO Hospital.Procedure (proc_name, duration) VALUES ('Магнитотерапия', '00:00:45');
INSERT INTO Hospital.Procedure (proc_name, duration) VALUES ('Ампутация', '00:05:20');
INSERT INTO Hospital.Procedure (proc_name, duration) VALUES ('Вакцинация', '00:00:15');

INSERT INTO Hospital.Medicine (drug_name, validity) VALUES ('Омепразол', '2027-01-27');
INSERT INTO Hospital.Medicine (drug_name, validity) VALUES ('Платифиллин', '2029-03-02');
INSERT INTO Hospital.Medicine (drug_name, validity) VALUES ('Бисакодил', '2024-11-19');
INSERT INTO Hospital.Medicine (drug_name, validity) VALUES ('Лоперамид', '2025-03-25');
INSERT INTO Hospital.Medicine (drug_name, validity) VALUES ('Панкреатин', '2023-10-29');
INSERT INTO Hospital.Medicine (drug_name, validity) VALUES ('Инсулин', '2030-01-20');
INSERT INTO Hospital.Medicine (drug_name, validity) VALUES ('Репанглинид', '2022-08-22');
INSERT INTO Hospital.Medicine (drug_name, validity) VALUES ('Кальцитриол', '2027-05-09');
INSERT INTO Hospital.Medicine (drug_name, validity) VALUES ('Тиамин', '2027-02-20');
INSERT INTO Hospital.Medicine (drug_name, validity) VALUES ('Варфарин', '2027-09-25');
INSERT INTO Hospital.Medicine (drug_name, validity) VALUES ('Дигоксин', '2023-04-13');
INSERT INTO Hospital.Medicine (drug_name, validity) VALUES ('Мельдоний', '2029-02-26');

INSERT INTO Hospital.Diagnosis (diag_name, degree, medicine_id, procedure_id) VALUES ('Анемия', 'Тяжелая', 8, 2);
INSERT INTO Hospital.Diagnosis (diag_name, degree, medicine_id, procedure_id) VALUES ('Анемия', 'Тяжелая', 4, 2);
INSERT INTO Hospital.Diagnosis (diag_name, degree, medicine_id, procedure_id) VALUES ('Ангина', 'Средняя', 1, 5);
INSERT INTO Hospital.Diagnosis (diag_name, degree, medicine_id, procedure_id) VALUES ('Артроз', 'Средняя', 4, 1);
INSERT INTO Hospital.Diagnosis (diag_name, degree, medicine_id, procedure_id) VALUES ('Бешенство', 'Легкая', 9, 10);
INSERT INTO Hospital.Diagnosis (diag_name, degree, medicine_id, procedure_id) VALUES ('Бронхит', 'Средняя', 3, 3);
INSERT INTO Hospital.Diagnosis (diag_name, degree, medicine_id, procedure_id) VALUES ('Гепатит', 'Тяжелая', 2, 4);
INSERT INTO Hospital.Diagnosis (diag_name, degree, medicine_id, procedure_id) VALUES ('Грипп', 'Легкая', 3, NULL);
INSERT INTO Hospital.Diagnosis (diag_name, degree, medicine_id, procedure_id) VALUES ('Изжога', 'Легкая', 6, NULL);
INSERT INTO Hospital.Diagnosis (diag_name, degree, medicine_id, procedure_id) VALUES ('Кариес', 'Легкая', NULL, 10);
INSERT INTO Hospital.Diagnosis (diag_name, degree, medicine_id, procedure_id) VALUES ('Ларингит', 'Средняя', 3, 8);
INSERT INTO Hospital.Diagnosis (diag_name, degree, medicine_id, procedure_id) VALUES ('Малярия', 'Тяжелая', 1, 8);

INSERT INTO Hospital.Blood (group_num, rh_factor) VALUES (1, '+');
INSERT INTO Hospital.Blood (group_num, rh_factor) VALUES (1, '-');
INSERT INTO Hospital.Blood (group_num, rh_factor) VALUES (2, '+');
INSERT INTO Hospital.Blood (group_num, rh_factor) VALUES (2, '-');
INSERT INTO Hospital.Blood (group_num, rh_factor) VALUES (3, '+');
INSERT INTO Hospital.Blood (group_num, rh_factor) VALUES (3, '-');
INSERT INTO Hospital.Blood (group_num, rh_factor) VALUES (4, '+');
INSERT INTO Hospital.Blood (group_num, rh_factor) VALUES (4, '-');

INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Антон','Алексеев','1951-12-15', 'M', 4, 9);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Андрей','Кузьмин','1951-10-13', 'M', 1, 5);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Борис','Королев','1943-09-12', 'M', 3, 10);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Петр','Белов','1993-10-19', 'M', 3, 1);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Леонид','Лебедев','1955-03-12', 'M', 5, 6);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Михаил','Зайцев','1984-11-13', 'M', 3, 2);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Никита','Глухов','1959-08-11', 'M', 4, 1);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Артур','Кулапин','2000-11-03', 'M', 2, 5);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Евгений','Захаров','1991-10-25', 'M', 8, 11);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Татьяна','Гусева','1973-03-11', 'Ж', 7, 2);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Анастасия','Петрова','1984-04-28', 'Ж', 4, 9);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Ангелина','Андреева','1994-11-13', 'Ж', 6, 2);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Мария','Волкова','1955-03-13', 'Ж', 3, 6);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Валерия','Иванова','1971-02-05', 'Ж', 2, 5);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Александра','Ковалева','1962-03-06', 'Ж', 7, 10);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Ева','Ильина','1999-12-11', 'Ж', 2, 3);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Виктория','Захарова','1962-04-17', 'Ж', 1, 3);
INSERT INTO Hospital.Patient (first_name, last_name, birth, gender, blood_id, diagnosis_id) VALUES ('Анна','Виноградова','1959-02-11', 'Ж', 1, 4);

INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (15, 4, '2022-05-10', '09:00:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (1, 2, '2022-05-10', '09:20:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (3, 3, '2022-05-10', '09:20:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (10, 1, '2022-05-10', '09:30:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (9, 4, '2022-05-10', '09:30:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (2, 6, '2022-05-10', '19:00:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (8, 9, '2022-05-10', '15:00:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (2, 6, '2022-05-10', '12:00:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (10, 4, '2022-05-10', '14:20:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (8, 9, '2022-05-10', '17:00:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (5, 8, '2022-05-11', '17:00:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (13, 10, '2022-05-11', '09:20:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (12, 11, '2022-05-11', '11:40:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (6, 4, '2022-05-12', '17:00:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (10, 3, '2022-05-12', '18:00:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (14, 1, '2022-05-15', '11:00:00');
INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (14, 8, '2022-05-15', '08:00:00');
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------

-- UPDATE Hospital.Diagnosis SET medicine_id = 9 WHERE medicine_id = 8;
-- UPDATE Hospital.Medicine SET validity = '2027-01-01' WHERE validity BETWEEN '2027-01-01' AND '2030-01-01';
-- UPDATE Hospital.Patient SET diagnosis_id = 8 WHERE first_name = 'Антон' AND  last_name = 'Алексеев';
-- UPDATE Hospital.Patient SET blood_id = 2 WHERE blood_id = 4 AND gender = 'M';
-- UPDATE Hospital.Procedure SET duration = '00:00:15' WHERE proc_name = 'Флюрография';
--
-- DELETE FROM Hospital.Visit v USING Hospital.Doctor d WHERE v.doctor_id = d.doctor_id AND d.doctor_id = 3;
-- DELETE FROM Hospital.Visit WHERE visit_time BETWEEN '09:10:00' AND '09:59:59';
-- DELETE FROM Hospital.Visit WHERE visit_date <> '2022-05-21';
-- DELETE FROM Hospital.Visit v USING Hospital.Patient p WHERE v.patient_id = p.patient_id AND p.blood_id BETWEEN 6 AND 8;
-- DELETE FROM Hospital.Visit v USING Hospital.Patient p, Hospital.Doctor d
-- WHERE v.doctor_id = p.patient_id AND v.doctor_id = d.doctor_id AND (diagnosis_id = 2 OR specialization_id = 4);

------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
-- Болезни, которые есть как минимум у 2 людей с положительным резус-фактором.
SELECT COUNT(patient_id), diag_name
FROM Hospital.Patient p INNER JOIN Hospital.Blood b ON p.blood_id = b.blood_id
    INNER JOIN Hospital.Diagnosis d ON p.diagnosis_id = d.diagnosis_id
WHERE rh_factor = '+'
GROUP BY diag_name
HAVING COUNT(patient_id) > 1;

-- Люди в порядке от старых к молодым между 1960 и 1990 годами и назначаемые им процедуры и лекарства.
SELECT first_name, last_name, birth, proc_name, drug_name
FROM Hospital.Patient p INNER JOIN (SELECT diagnosis_id, proc_name, drug_name
    FROM Hospital.Diagnosis d INNER JOIN Hospital.Procedure pr ON d.procedure_id=pr.procedure_id
    INNER JOIN Hospital.Medicine m ON d.medicine_id = m.medicine_id) t ON  p.diagnosis_id = t.diagnosis_id
WHERE birth BETWEEN '1960-01-01' AND '1990-01-01'
ORDER BY birth;

--Пронумерованные и отсортированные по фамилии пациенты у доктора Антонова, записанные до 13:00 на прием.
SELECT row_number() OVER (ORDER BY p.last_name) AS row_number, p.last_name, p.first_name, d.last_name doctor
FROM Hospital.Patient p INNER JOIN Hospital.Visit v ON p.patient_id=v.patient_id
RIGHT JOIN Hospital.Doctor d ON v.doctor_id = d.doctor_id
WHERE v.doctor_id = 4 AND  v.visit_time < '13:00:00';


--Группировка по дате количества пациентов, которые пришли на прием на определенный момент времени.
SELECT v.visit_date, v.visit_time, COUNT(v.patient_id)
    OVER (PARTITION BY v.visit_date ORDER BY v.visit_time) visiting_patient
FROM Hospital.Visit v;

--Фамилия и имя пациентов на 2022-05-10, время их приема, предыдущий пациент и диагноз текущего пациента.
SELECT p.last_name, p.first_name, v.visit_time, LAG(p.last_name) OVER (ORDER BY v.visit_time), d.diag_name
FROM Hospital.Patient p INNER JOIN Hospital.Diagnosis d ON p.diagnosis_id=d.diagnosis_id
INNER JOIN Hospital.Visit v ON v.patient_id=p.patient_id
WHERE v.visit_date = '2022-05-10';

--Люди, группированные по группе крови, имеющие положительные резус-фактор,
-- и общее количество пациентов из этой категории.
SELECT b.group_num, p.last_name, COUNT(p.patient_id) OVER(PARTITION BY b.group_num)
FROM Hospital.Patient p INNER JOIN Hospital.Blood b ON p.blood_id=b.blood_id
WHERE rh_factor='+';

------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
CREATE UNIQUE INDEX visit_idx ON Hospital.Visit(visit_id ASC);
CREATE INDEX doctor_idx ON Hospital.Doctor(last_name, first_name ASC);
CREATE INDEX diag_idx ON Hospital.Diagnosis(diag_name ASC);
CREATE INDEX spec_idx ON Hospital.Specialization(spec_name ASC);
CREATE INDEX patient_idx ON Hospital.Patient(last_name, first_name ASC);
CREATE INDEX proc_idx ON Hospital.Procedure(proc_name ASC);
CREATE INDEX med_idx ON Hospital.Medicine(drug_name ASC);
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------

-- Информация о пациентах: скрытое имя, фамилия, дата рождения.
CREATE OR REPLACE VIEW Hospital.patient_info_v AS
    SELECT concat(left(first_name, 1), '***', right(first_name, 1)) AS name,
           last_name,
           birth
    FROM Hospital.Patient;

-- Информация о пациенте: имя, фамилия, скрытая дата рождения
CREATE OR REPLACE VIEW Hospital.patient_birth_info_v AS
    SELECT first_name, last_name,
           concat(left(to_char(birth,'YYYY-MM-DD'), 2), '**-**', right(to_char(birth,'YYYY-MM-DD'), 2)) AS birth
    FROM Hospital.Patient;

-- Cортировка по дню(только число) и времени приема(без секунд), пациент и его доктор.
CREATE OR REPLACE VIEW Hospital.visit_info_v AS
    SELECT right(to_char(birth,'YYYY-MM-DD'), 2) AS day,
           left(to_char(visit_time, 'HH24-MI-SS'), 5) AS time, p.first_name, p.last_name,
           d.last_name AS doctor
    FROM Hospital.visit v INNER JOIN Hospital.patient p ON v.patient_id=p.patient_id
    INNER JOIN Hospital.Doctor d ON d.doctor_id=v.doctor_id
    ORDER BY day, time;

--Пациент, диагноз и процедура лечения, которая длится меньше часа
CREATE OR REPLACE VIEW Hospital.illness_info_v AS
    SELECT p.last_name, d.diag_name, pr.proc_name
    FROM Hospital.Patient p INNER JOIN Hospital.Diagnosis d ON p.diagnosis_id=d.diagnosis_id
    INNER JOIN Hospital.Procedure pr ON d.procedure_id=pr.procedure_id
    WHERE EXTRACT (HOURS from duration) = 0;

--Доктора, их специальность и время приема 2022-05-10. Сортировка по фамилии, времени.
CREATE OR REPLACE VIEW Hospital.doctor_info_v AS
    SELECT d.last_name, s.spec_name, left(to_char(visit_time, 'HH24-MI-SS'), 5) AS time
    FROM Hospital.Visit v INNER JOIN Hospital.doctor d ON v.doctor_id=d.doctor_id
    INNER JOIN Hospital.Specialization s ON d.specialization_id=s.specialization_id
    WHERE v.visit_date = '2022-05-10'
    ORDER BY d.last_name, time;

--Пациенты моложе 27 лет с легкой формой заболевания.
CREATE OR REPLACE VIEW Hospital.young_patient_info_v AS
    SELECT last_name, first_name, EXTRACT(YEARS FROM AGE(birth)) age
    FROM Hospital.Patient p INNER JOIN Hospital.Diagnosis d ON p.diagnosis_id=d.diagnosis_id
    WHERE EXTRACT(YEARS FROM AGE(birth)) < 27 AND degree='Легкая'
    ORDER BY last_name, first_name, age;
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
-- Добавить пациента.
CREATE OR REPLACE PROCEDURE Hospital.add_patient (pat_id int, name varchar(20), surname varchar(20),
                                        birth_date date, gend char, bl_id int, diag_id int)
LANGUAGE plpgsql
AS $$
  BEGIN
    IF (NOT EXISTS(SELECT p.patient_id FROM Hospital.Patient p
               WHERE p.patient_id = pat_id)) THEN
      INSERT INTO Hospital.Patient VALUES
        (pat_id, name, surname, birth_date, gend, bl_id, diag_id);
    ELSE
      RAISE EXCEPTION 'Patient with such id already exists';
    END IF;
  END;
  $$;
CALL Hospital.add_patient(19, 'Александр', 'Антонов', '2000-10-12', 'M', 3, 5);


-- Изменить в таблице посещений доктора и время по заданному id пациента, дате, id доктора, новому времени.
CREATE OR REPLACE PROCEDURE Hospital.change_doctor (pat_id int, v_date date, d_id int, new_time time)
LANGUAGE plpgsql
AS $$
  BEGIN
    IF (NOT EXISTS(SELECT v.patient_id FROM Hospital.Visit v
               WHERE v.patient_id = pat_id)) THEN
      RAISE EXCEPTION 'Patient does not exist in table';
    ELSE
      IF (EXISTS(SELECT v.visit_date FROM Hospital.Visit v
               WHERE v.visit_date = v_date)) THEN
            UPDATE Hospital.Visit SET visit_time = new_time, doctor_id = d_id
          WHERE patient_id = pat_id AND visit_date = v_date;
        END IF;
    END IF;
  END;
  $$;
CALL Hospital.change_doctor(2, '2022-05-10', 3, '09:00:00');

------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
CREATE TABLE Hospital.Logs(
    visit_id SERIAL,
    patient_id INTEGER,
    doctor_id INTEGER,
    oper_type TEXT,
    add_date TIMESTAMP not null
);

--Добавляем логи на все изменения в таблице Visit. При INSERT, UPDATE, DELETE
--в этой таблице фиксируется время этой операции.
CREATE OR REPLACE FUNCTION Hospital.add_to_logs() RETURNS TRIGGER AS $$
BEGIN
    IF TG_OP = 'INSERT' THEN
        INSERT INTO Hospital.Logs VALUES (NEW.visit_id, NEW.patient_id,
                                          NEW.doctor_id,'INSERT', NOW());
        RETURN NEW;
    ELSIF TG_OP = 'UPDATE' THEN
                INSERT INTO Hospital.Logs VALUES (NEW.visit_id, NEW.patient_id,
                                          NEW.doctor_id,'UPDATE', NOW());
        RETURN NEW;
    ELSIF TG_OP = 'DELETE' THEN
                INSERT INTO Hospital.Logs VALUES (OLD.visit_id, OLD.patient_id,
                                          OLD.doctor_id,'DELETE', NOW());
        RETURN OLD;
    END IF;
END
$$ LANGUAGE plpgsql;

CREATE TRIGGER logs_control
    AFTER INSERT OR UPDATE OR DELETE ON Hospital.Visit
    FOR EACH ROW EXECUTE PROCEDURE Hospital.add_to_logs();

INSERT INTO Hospital.Visit (patient_id, doctor_id, visit_date, visit_time) VALUES (14, 8, '2022-05-15', '08:00:00');
UPDATE Hospital.Visit SET visit_time = '09:00:05' WHERE visit_time = '09:00:00';
DELETE FROM Hospital.Visit WHERE visit_date <> '2022-05-21';



CREATE TABLE Hospital.OldPatients(
    name text,
    surname text,
    age int
);
--Если добавляется пациент старше 60 лет, добавляем его в отдельную таблицу с пожилыми пациентами.
CREATE OR REPLACE FUNCTION Hospital.ProcessOldMan() RETURNS TRIGGER AS $$
BEGIN
    IF TG_OP = 'INSERT' THEN
        IF EXTRACT(YEARS FROM AGE(NEW.birth)) > 60 THEN
            INSERT INTO Hospital.OldPatients VALUES (NEW.first_name, NEW.last_name,
                                             EXTRACT(YEARS FROM AGE(NEW.birth)));
        END IF;
        RETURN NEW;
    END IF;
END
$$ LANGUAGE plpgsql;

CREATE TRIGGER process_old_patients
    AFTER INSERT ON Hospital.Patient
    FOR EACH ROW EXECUTE PROCEDURE Hospital.ProcessOldMan();

